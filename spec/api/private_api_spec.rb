=begin
#API（証拠金取引所）

#本APIを利用することにより、取り扱っている銘柄一覧の取得、ローソク足データの取得、板の取得、歩値の取得、注文、残高照会といった操作を行う事ができます。 ## 留意事項 - APIキーはお客様のアカウント情報と紐付いております。もし第三者がお客様のAPIキーを知った場合、遠隔で売買注文の操作が可能となります。APIキーを第三者へ渡す事はセキュリティリスクを鑑みお控えください。 - 他社が提供するAPI機能を使用した自動売買取引ツールは、ご自身の判断と責任でご利用ください。 - リクエストパラメーターやレスポンスの日時についてはミリ秒のtimestamp(Unix Time)を用います。 - 日時の範囲検索は「以上・未満」で検索します。 

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.54
=end

require 'spec_helper'
require 'json'

# Unit tests for RakutenTrading::PrivateApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PrivateApi' do
  before do
    # run before each test
    @instance = RakutenTrading::PrivateApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PrivateApi' do
    it 'should create an instance of PrivateApi' do
      expect(@instance).to be_instance_of(RakutenTrading::PrivateApi)
    end
  end

  # unit tests for get_asset
  # 残高一覧取得
  # アカウントの資産情報（各通貨の保有量）を取得します。 
  # @param [Hash] opts the optional parameters
  # @return [Array<InlineResponse2005>]
  describe 'get_asset test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cfd_trades
  # 約定履歴取得
  # 指定された条件に基づくCFD取引の約定履歴（トレード）を取得します。これにより、ユーザーは過去の取引データを分析することができます。 
  # @param symbol_id シンボルID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :id 約定IDの配列
  # @option opts [Integer] :date_from 取得開始日時（作成日時）。UNIXタイムスタンプ（ミリ秒）で指定。直近48時間。
  # @option opts [Integer] :date_to 取得終了日時（作成日時）。UNIXタイムスタンプ（ミリ秒）で指定。直近48時間。
  # @option opts [String] :order_behavior 注文の挙動（OPEN, CLOSE）
  # @option opts [String] :trade_behavior トレードの挙動（OPEN, CLOSE）
  # @option opts [String] :order_side 売買方向（SELL, BUY）
  # @option opts [Array<String>] :order_pattern 注文パターン（NORMAL, OCO, IFD, IFD_OCO, LOSS_CUT, CLOSE_ALL）
  # @option opts [Array<String>] :order_type 執行条件（MARKET, LIMIT, STOP）
  # @option opts [String] :trade_action 約定アクション（MAKER, TAKER）
  # @option opts [Array<Integer>] :order_id 注文IDの配列
  # @option opts [Array<Integer>] :position_id 建玉IDの配列
  # @option opts [Integer] :size 取得件数。デフォルトは30、最大は500。
  # @return [Array<CfdTrade>]
  describe 'get_cfd_trades test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_equitydata
  # 証拠金関連項目取得
  # 口座の証拠金関連情報を取得します。これには建玉評価損益、必要証拠金、証拠金維持率などが含まれます。 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2006]
  describe 'get_equitydata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order
  # 注文一覧取得
  # 指定された条件にマッチする注文一覧を取得します。このエンドポイントを通じて、特定のシンボル、注文タイプ、または期間に関する注文の詳細情報を照会することができます。 
  # @param symbol_id シンボルID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :id 注文IDの配列
  # @option opts [Integer] :date_from 取得開始日時（注文成立日時）。UNIXタイムスタンプ（ミリ秒）で指定。
  # @option opts [Integer] :date_to 取得終了日時（注文成立日時）。UNIXタイムスタンプ（ミリ秒）で指定。
  # @option opts [String] :order_behavior 注文の挙動（OPEN, CLOSE）
  # @option opts [String] :order_side 売買方向（SELL, BUY）
  # @option opts [Array<String>] :order_pattern 注文パターン（NORMAL, OCO, IFD, IFD_OCO）
  # @option opts [Array<String>] :order_type 執行条件（MARKET, LIMIT, STOP）
  # @option opts [Array<String>] :close_behavior 決済挙動（CROSS, FIFO）
  # @option opts [Array<String>] :order_status 注文ステータス（WORKING_ORDER, PARTIAL_FILL）
  # @option opts [BOOLEAN] :post_only メイカー注文のみ許可
  # @option opts [Integer] :size 取得件数。デフォルトは30、最大は500。
  # @return [Array<OrderDetail>]
  describe 'get_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_position
  # 建玉一覧取得
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :symbol_id シンボルID。特定の銘柄に対する建玉のみを取得したい場合に指定します。
  # @option opts [Array<Integer>] :id 建玉ID。特定の建玉情報のみを取得したい場合に指定します。
  # @option opts [Integer] :date_from 取得開始日時。指定日時以上の建玉を検索します。
  # @option opts [Integer] :date_to 取得終了日時。指定日時未満の建玉を検索します。
  # @return [Array<InlineResponse2007>]
  describe 'get_position test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for order
  # 注文
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderResponse>]
  describe 'order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for order_amend
  # 注文訂正
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderResponse>]
  describe 'order_amend test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for order_cancel
  # 注文取消
  # @param symbol_id シンボルID
  # @param id 注文ID
  # @param [Hash] opts the optional parameters
  # @return [Array<OrderResponse>]
  describe 'order_cancel test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
